/**
 * 智能分类器 - 基于描述文本自动判断交易分类
 * 使用用户指定的分类列表进行智能分类
 */

// 定义分类规则映射
interface CategoryRule {
  category: string;
  keywords: string[];
  patterns: RegExp[];
}

// 支出分类规则 - 基于用户指定的分类列表
const EXPENSE_CATEGORIES: CategoryRule[] = [
  {
    category: '餐饮',
    keywords: ['吃饭', '午餐', '晚餐', '早餐', '饭店', '餐厅', '外卖', '点餐', '食物', '零食', '咖啡', '奶茶', '饮料', '酒', '聚餐', '火锅', '烧烤', '快餐', '餐饮', '美食', '吃', '喝'],
    patterns: [/吃了?.*/, /买了?.*吃/, /.*餐厅.*/, /.*饭店.*/, /.*外卖.*/, /.*餐饮.*/]
  },
  {
    category: '休闲娱乐',
    keywords: ['电影', '游戏', 'ktv', '酒吧', '娱乐', '运动', '健身', '游泳', '球类', '休闲', '玩', '看电影', '唱歌', '跳舞', '音乐会', '演出'],
    patterns: [/.*电影.*/, /.*游戏.*/, /.*ktv.*/, /.*娱乐.*/, /.*健身.*/, /.*休闲.*/]
  },
  {
    category: '购物',
    keywords: ['买', '购买', '购物', '商场', '超市', '淘宝', '京东', '拼多多', '网购', '商品', '东西', '逛街', '采购'],
    patterns: [/买了?.*/, /购买.*/, /购物.*/, /.*商场.*/, /.*超市.*/]
  },
  {
    category: '穿搭美容',
    keywords: ['衣服', '裤子', '鞋子', '帽子', '袜子', '内衣', '外套', '毛衣', 'T恤', '裙子', '包包', '手表', '首饰', '化妆品', '美容', '护肤', '理发', '美发', '美甲', '穿搭'],
    patterns: [/.*衣服.*/, /.*鞋子.*/, /.*裤子.*/, /.*包包.*/, /.*化妆品.*/, /.*美容.*/, /.*穿搭.*/]
  },
  {
    category: '水果零食',
    keywords: ['水果', '零食', '苹果', '香蕉', '橙子', '葡萄', '草莓', '薯片', '饼干', '糖果', '巧克力', '坚果', '蛋糕', '面包'],
    patterns: [/.*水果.*/, /.*零食.*/, /.*苹果.*/, /.*香蕉.*/, /.*薯片.*/, /.*饼干.*/]
  },
  {
    category: '交通',
    keywords: ['打车', '出租车', '地铁', '公交', '滴滴', 'uber', '高铁', '火车', '飞机', '机票', '车票', '油费', '停车', '加油', '汽车', '摩托', '电动车', '交通'],
    patterns: [/.*打车.*/, /.*地铁.*/, /.*公交.*/, /.*机票.*/, /.*车票.*/, /.*交通.*/]
  },
  {
    category: '生活日用',
    keywords: ['洗发水', '沐浴露', '牙膏', '牙刷', '毛巾', '纸巾', '洗衣液', '清洁用品', '生活用品', '日用品', '洗涤', '清洁', '卫生纸', '肥皂'],
    patterns: [/.*洗发水.*/, /.*沐浴露.*/, /.*牙膏.*/, /.*纸巾.*/, /.*生活用品.*/, /.*日用.*/]
  },
  {
    category: '人情社交',
    keywords: ['红包', '礼品', '礼物', '聚会', '请客', '份子钱', '婚礼', '生日', '节日', '社交', '人情', '礼金'],
    patterns: [/.*红包.*/, /.*礼品.*/, /.*礼物.*/, /.*聚会.*/, /.*请客.*/, /.*人情.*/, /.*社交.*/]
  },
  {
    category: '宠物',
    keywords: ['宠物', '狗', '猫', '鸟', '鱼', '宠物食品', '宠物用品', '兽医', '宠物医院', '猫粮', '狗粮'],
    patterns: [/.*宠物.*/, /.*狗.*/, /.*猫.*/, /.*猫粮.*/, /.*狗粮.*/, /.*兽医.*/]
  },
  {
    category: '养娃',
    keywords: ['孩子', '儿童', '婴儿', '奶粉', '尿布', '玩具', '童装', '儿童用品', '幼儿园', '学费', '培训班', '养娃', '育儿'],
    patterns: [/.*孩子.*/, /.*儿童.*/, /.*婴儿.*/, /.*奶粉.*/, /.*玩具.*/, /.*养娃.*/, /.*育儿.*/]
  },
  {
    category: '运动',
    keywords: ['运动', '健身', '游泳', '跑步', '篮球', '足球', '羽毛球', '乒乓球', '瑜伽', '健身房', '运动装备', '球鞋'],
    patterns: [/.*运动.*/, /.*健身.*/, /.*游泳.*/, /.*跑步.*/, /.*球.*/, /.*瑜伽.*/]
  },
  {
    category: '生活服务',
    keywords: ['维修', '快递', '水电费', '物业费', '网费', '话费', '房租', '水费', '电费', '燃气费', '服务', '修理', '安装'],
    patterns: [/.*维修.*/, /.*水电费.*/, /.*房租.*/, /.*话费.*/, /.*服务.*/, /.*修理.*/]
  },
  {
    category: '买菜',
    keywords: ['买菜', '菜市场', '蔬菜', '肉类', '鱼', '虾', '鸡蛋', '米', '面', '油', '盐', '调料', '食材'],
    patterns: [/.*买菜.*/, /.*菜市场.*/, /.*蔬菜.*/, /.*肉类.*/, /.*食材.*/]
  },
  {
    category: '住房',
    keywords: ['房租', '房贷', '物业费', '装修', '家具', '房屋', '住房', '租房', '买房'],
    patterns: [/.*房租.*/, /.*房贷.*/, /.*物业费.*/, /.*装修.*/, /.*家具.*/, /.*住房.*/]
  },
  {
    category: '爱车',
    keywords: ['汽车', '车', '油费', '加油', '保养', '维修', '保险', '停车费', '洗车', '车辆', '爱车'],
    patterns: [/.*汽车.*/, /.*车.*/, /.*油费.*/, /.*加油.*/, /.*保养.*/, /.*爱车.*/]
  },
  {
    category: '发红包',
    keywords: ['发红包', '红包', '转账给', '给钱', '发钱', '打钱'],
    patterns: [/发.*红包.*/, /.*发红包.*/, /转账给.*/, /给.*钱/, /发.*钱/]
  },
  {
    category: '转账',
    keywords: ['转账', '汇款', '打款', '付款', '支付'],
    patterns: [/.*转账.*/, /.*汇款.*/, /.*打款.*/, /.*付款.*/]
  },
  {
    category: '学习教育',
    keywords: ['学费', '培训', '课程', '书籍', '教材', '学习', '补习', '家教', '驾校', '考试', '证书', '教育', '培训班'],
    patterns: [/.*学费.*/, /.*培训.*/, /.*课程.*/, /.*书籍.*/, /.*学习.*/, /.*教育.*/]
  },
  {
    category: '网络虚拟',
    keywords: ['游戏', '充值', '会员', '软件', '应用', 'app', '网络', '虚拟', '在线', '数字'],
    patterns: [/.*游戏.*/, /.*充值.*/, /.*会员.*/, /.*软件.*/, /.*网络.*/, /.*虚拟.*/]
  },
  {
    category: '烟酒',
    keywords: ['烟', '香烟', '酒', '白酒', '啤酒', '红酒', '烟酒'],
    patterns: [/.*烟.*/, /.*酒.*/, /.*香烟.*/, /.*烟酒.*/]
  },
  {
    category: '医疗保健',
    keywords: ['医院', '看病', '药品', '药物', '体检', '医疗', '诊所', '牙医', '眼科', '感冒', '发烧', '治疗', '保健', '健康'],
    patterns: [/.*医院.*/, /.*看病.*/, /.*药.*/, /.*体检.*/, /.*医疗.*/, /.*保健.*/]
  },
  {
    category: '金融保险',
    keywords: ['保险', '理财', '投资', '基金', '股票', '银行', '贷款', '金融', '保费'],
    patterns: [/.*保险.*/, /.*理财.*/, /.*投资.*/, /.*基金.*/, /.*股票.*/, /.*金融.*/]
  },
  {
    category: '家居家电',
    keywords: ['家具', '家电', '电视', '冰箱', '洗衣机', '空调', '微波炉', '电饭煲', '沙发', '床', '桌子', '椅子', '家居'],
    patterns: [/.*家具.*/, /.*家电.*/, /.*电视.*/, /.*冰箱.*/, /.*洗衣机.*/, /.*家居.*/]
  },
  {
    category: '酒店旅行',
    keywords: ['酒店', '旅行', '旅游', '景点', '门票', '住宿', '机票', '火车票', '旅馆', '民宿'],
    patterns: [/.*酒店.*/, /.*旅行.*/, /.*旅游.*/, /.*景点.*/, /.*门票.*/, /.*住宿.*/]
  },
  {
    category: '公益',
    keywords: ['捐款', '公益', '慈善', '捐赠', '爱心', '志愿'],
    patterns: [/.*捐款.*/, /.*公益.*/, /.*慈善.*/, /.*捐赠.*/, /.*爱心.*/]
  },
  {
    category: '互助保障',
    keywords: ['互助', '保障', '互助金', '相互保', '众筹'],
    patterns: [/.*互助.*/, /.*保障.*/, /.*互助金.*/, /.*相互保.*/, /.*众筹.*/]
  },
  {
    category: '其他',
    keywords: ['其他', '杂项', '未分类', '其它'],
    patterns: [/.*其他.*/, /.*杂项.*/, /.*未分类.*/]
  }
];

// 收入分类规则 - 基于用户指定的分类列表
const INCOME_CATEGORIES: CategoryRule[] = [
  {
    category: '工资',
    keywords: ['工资', '薪水', '薪资', '月薪', '年薪', '底薪', '基本工资'],
    patterns: [/.*工资.*/, /.*薪水.*/, /.*薪资.*/, /.*月薪.*/, /.*年薪.*/]
  },
  {
    category: '兼职',
    keywords: ['兼职', '外快', '副业', '接单', '代驾', '外卖', '快递', '临时工', '打工'],
    patterns: [/.*兼职.*/, /.*外快.*/, /.*副业.*/, /.*接单.*/, /.*代驾.*/, /.*打工.*/]
  },
  {
    category: '投资理财',
    keywords: ['股票', '基金', '理财', '分红', '利息', '收益', '投资', '债券', '理财产品'],
    patterns: [/.*股票.*/, /.*基金.*/, /.*理财.*/, /.*分红.*/, /.*利息.*/, /.*投资.*/]
  },
  {
    category: '人情社交',
    keywords: ['礼金', '份子钱', '人情', '社交收入'],
    patterns: [/.*礼金.*/, /.*份子钱.*/, /.*人情.*/]
  },
  {
    category: '奖金补贴',
    keywords: ['奖金', '津贴', '补贴', '绩效', '年终奖', '季度奖', '全勤奖', '加班费'],
    patterns: [/.*奖金.*/, /.*津贴.*/, /.*补贴.*/, /.*绩效.*/, /.*年终奖.*/, /.*加班费.*/]
  },
  {
    category: '报销',
    keywords: ['报销', '差旅费', '餐费报销', '交通费报销', '医疗报销'],
    patterns: [/.*报销.*/, /.*差旅费.*/, /.*餐费报销.*/, /.*交通费报销.*/]
  },
  {
    category: '生意',
    keywords: ['生意', '营业收入', '销售', '经营', '买卖', '商业'],
    patterns: [/.*生意.*/, /.*营业收入.*/, /.*销售.*/, /.*经营.*/, /.*买卖.*/]
  },
  {
    category: '卖二手',
    keywords: ['卖二手', '二手', '转卖', '出售', '卖掉'],
    patterns: [/.*卖二手.*/, /.*二手.*/, /.*转卖.*/, /.*出售.*/, /.*卖掉.*/]
  },
  {
    category: '生活费',
    keywords: ['生活费', '零花钱', '家用', '生活补贴'],
    patterns: [/.*生活费.*/, /.*零花钱.*/, /.*家用.*/, /.*生活补贴.*/]
  },
  {
    category: '中奖',
    keywords: ['中奖', '彩票', '奖品', '抽奖', '中彩'],
    patterns: [/.*中奖.*/, /.*彩票.*/, /.*奖品.*/, /.*抽奖.*/, /.*中彩.*/]
  },
  {
    category: '收红包',
    keywords: ['收红包', '红包', '压岁钱', '礼金'],
    patterns: [/收.*红包.*/, /.*收红包.*/, /.*压岁钱.*/, /.*礼金.*/]
  },
  {
    category: '收转账',
    keywords: ['收转账', '转账', '汇款', '收款'],
    patterns: [/收.*转账.*/, /.*收转账.*/, /.*汇款.*/, /.*收款.*/]
  },
  {
    category: '保险理赔',
    keywords: ['保险理赔', '理赔', '保险金', '赔偿'],
    patterns: [/.*保险理赔.*/, /.*理赔.*/, /.*保险金.*/, /.*赔偿.*/]
  },
  {
    category: '退款',
    keywords: ['退款', '返现', '返利', '退货', '退费'],
    patterns: [/.*退款.*/, /.*返现.*/, /.*返利.*/, /.*退货.*/, /.*退费.*/]
  },
  {
    category: '其他',
    keywords: ['其他', '杂项', '未分类', '其它'],
    patterns: [/.*其他.*/, /.*杂项.*/, /.*未分类.*/]
  }
];

/**
 * 基于描述文本智能判断交易分类
 * @param description 用户输入的描述信息
 * @param type 交易类型 (income 或 expense)
 * @returns 推荐的分类名称
 */
export function getSmartCategory(description: string, type: 'income' | 'expense'): string {
  const normalizedDescription = description.toLowerCase().trim();
  const categories = type === 'expense' ? EXPENSE_CATEGORIES : INCOME_CATEGORIES;
  
  // 计算每个分类的匹配分数
  const categoryScores: { [key: string]: number } = {};
  
  for (const rule of categories) {
    let score = 0;
    
    // 关键词匹配（每个关键词1分）
    for (const keyword of rule.keywords) {
      if (normalizedDescription.includes(keyword)) {
        score += 1;
      }
    }
    
    // 正则模式匹配（每个模式2分，权重更高）
    for (const pattern of rule.patterns) {
      if (pattern.test(normalizedDescription)) {
        score += 2;
      }
    }
    
    if (score > 0) {
      categoryScores[rule.category] = score;
    }
  }
  
  // 找到得分最高的分类
  const bestCategory = Object.keys(categoryScores).reduce((best, current) => {
    return categoryScores[current] > categoryScores[best] ? current : best;
  }, Object.keys(categoryScores)[0]);
  
  // 如果没有匹配到任何分类，使用默认分类
  if (!bestCategory) {
    return type === 'expense' ? '未分类消费' : '其他收入';
  }
  
  return bestCategory;
}

/**
 * 获取所有支持的分类列表
 * @param type 交易类型
 * @returns 分类列表
 */
export function getSupportedCategories(type: 'income' | 'expense'): string[] {
  const categories = type === 'expense' ? EXPENSE_CATEGORIES : INCOME_CATEGORIES;
  return categories.map(rule => rule.category);
}

/**
 * 获取分类的关键词提示
 * @param category 分类名称
 * @param type 交易类型
 * @returns 关键词列表
 */
export function getCategoryKeywords(category: string, type: 'income' | 'expense'): string[] {
  const categories = type === 'expense' ? EXPENSE_CATEGORIES : INCOME_CATEGORIES;
  const rule = categories.find(r => r.category === category);
  return rule ? rule.keywords : [];
}